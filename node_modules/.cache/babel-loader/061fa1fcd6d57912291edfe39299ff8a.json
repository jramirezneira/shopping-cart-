{"ast":null,"code":"import _objectSpread from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport cart, * as fromCart from './cart';\nimport products, * as fromProducts from './products';\nimport { getLocalStorageCart } from '../localStore';\nexport default combineReducers({\n  cart: cart,\n  products: products\n});\n\nvar getAddedIds = function getAddedIds(state) {\n  return fromCart.getAddedIds(state.cart);\n};\n\nvar getQuantity = function getQuantity(state, id) {\n  return fromCart.getQuantity(state.cart, id);\n};\n\nvar getProduct = function getProduct(state, id) {\n  return fromProducts.getProduct(state.products, id);\n}; //export const getType = (state) => fromProducts.getType(state)\n\n\nexport var getTotal = function getTotal(state) {\n  return getAddedIds(state).reduce(function (total, id) {\n    return parseInt(total + getProduct(state, id).valor_oferta.replace(\"$\", \"\").replace(\".\", \"\") * getQuantity(state, id));\n  }, 0).toFixed(2);\n};\nexport var getCartProducts = function getCartProducts(state) {\n  //getAddedIds(state).map(id => ({\n  Object.keys(getLocalStorageCart()).map(function (id) {\n    return _objectSpread({}, getProduct(state, id), {\n      quantity: getQuantity(state, id)\n    });\n  });\n};","map":{"version":3,"sources":["C:\\proyectos\\cuponatic\\shopping-cart\\src\\reducers\\index.js"],"names":["combineReducers","cart","fromCart","products","fromProducts","getLocalStorageCart","getAddedIds","state","getQuantity","id","getProduct","getTotal","reduce","total","parseInt","valor_oferta","replace","toFixed","getCartProducts","Object","keys","map","quantity"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,EAAa,KAAKC,QAAlB,MAAgC,QAAhC;AACA,OAAOC,QAAP,EAAiB,KAAKC,YAAtB,MAAwC,YAAxC;AACA,SAASC,mBAAT,QAAoC,eAApC;AAEA,eAAeL,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAJA,IAD6B;AAE7BE,EAAAA,QAAQ,EAARA;AAF6B,CAAD,CAA9B;;AAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAIL,QAAQ,CAACI,WAAT,CAAqBC,KAAK,CAACN,IAA3B,CAAJ;AAAA,CAAzB;;AACA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACD,KAAD,EAAQE,EAAR;AAAA,SAAeP,QAAQ,CAACM,WAAT,CAAqBD,KAAK,CAACN,IAA3B,EAAiCQ,EAAjC,CAAf;AAAA,CAApB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACH,KAAD,EAAQE,EAAR;AAAA,SAAeL,YAAY,CAACM,UAAb,CAAwBH,KAAK,CAACJ,QAA9B,EAAwCM,EAAxC,CAAf;AAAA,CAAnB,C,CACA;;;AAEA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAJ,KAAK;AAAA,SAC3BD,WAAW,CAACC,KAAD,CAAX,CACGK,MADH,CACU,UAACC,KAAD,EAAQJ,EAAR;AAAA,WACNK,QAAQ,CAACD,KAAK,GAAGH,UAAU,CAACH,KAAD,EAAQE,EAAR,CAAV,CAAsBM,YAAtB,CAAmCC,OAAnC,CAA2C,GAA3C,EAA+C,EAA/C,EAAmDA,OAAnD,CAA2D,GAA3D,EAA+D,EAA/D,IAAqER,WAAW,CAACD,KAAD,EAAQE,EAAR,CAAzF,CADF;AAAA,GADV,EAGI,CAHJ,EAKGQ,OALH,CAKW,CALX,CAD2B;AAAA,CAAtB;AAQP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAX,KAAK,EAEpC;AAEE;AACEY,EAAAA,MAAM,CAACC,IAAP,CAAYf,mBAAmB,EAA/B,EAAmCgB,GAAnC,CAAuC,UAAAZ,EAAE;AAAA,6BAEtCC,UAAU,CAACH,KAAD,EAAQE,EAAR,CAF4B;AAGzCa,MAAAA,QAAQ,EAAEd,WAAW,CAACD,KAAD,EAAQE,EAAR;AAHoB;AAAA,GAAzC;AAMD,CAXI","sourcesContent":["import { combineReducers } from 'redux'\r\nimport cart, * as fromCart from './cart'\r\nimport products, * as fromProducts from './products'\r\nimport { getLocalStorageCart } from '../localStore'\r\n\r\nexport default combineReducers({\r\n  cart,\r\n  products\r\n})\r\n\r\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\r\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\r\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\r\n//export const getType = (state) => fromProducts.getType(state)\r\n\r\nexport const getTotal = state =>\r\n  getAddedIds(state)\r\n    .reduce((total, id) =>\r\n      parseInt(total + getProduct(state, id).valor_oferta.replace(\"$\",\"\").replace(\".\",\"\") * getQuantity(state, id)) ,\r\n      0\r\n    )\r\n    .toFixed(2)\r\n\r\nexport const getCartProducts = state =>\r\n\r\n{\r\n   \r\n  //getAddedIds(state).map(id => ({\r\n    Object.keys(getLocalStorageCart()).map(id => ({\r\n      \r\n    ...getProduct(state, id),\r\n    quantity: getQuantity(state, id)\r\n  }))\r\n  \r\n  };\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}