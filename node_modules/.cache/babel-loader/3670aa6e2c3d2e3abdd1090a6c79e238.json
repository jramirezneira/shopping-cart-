{"ast":null,"code":"import * as types from '../constants/ActionTypes';\nimport { getVisibleProducts, getType, getLocation } from '../reducers/products';\nimport ProductItem from '../components/ProductItem';\nimport { connect } from 'react-redux';\n\nvar receiveProducts = function receiveProducts(products) {\n  return {\n    type: types.RECEIVE_PRODUCTS,\n    products: products\n  };\n};\n\nexport var getAllProducts = function getAllProducts() {\n  return function (dispatch) {\n    navigator.geolocation.getCurrentPosition(function (p) {\n      localStorage.setItem(\"latitude\", p.coords.latitude);\n      localStorage.setItem(\"longitude\", p.coords.longitude);\n    }, function () {\n      console.log(\"no lo hace\");\n    }, {\n      maximumAge: 60000,\n      timeout: 5000,\n      enableHighAccuracy: true\n    });\n    var lat = localStorage.latitude;\n    var lon = localStorage.longitude;\n    fetch(\"https://ww4.cuponatic.com/get?c=Santiago&latitud=\" + lat + \"&longitud=\" + lon + \"0&\").then(function (response) {\n      return response.json();\n    }, function (error) {\n      return console.log('An error occurred.', error);\n    }).then(function (json) {\n      return dispatch(receiveProducts(json));\n    });\n  };\n};\n\nvar chooseTypeSearchUnsafe = function chooseTypeSearchUnsafe(typechoose) {\n  return {\n    type: types.CHOOSE_TYPE_SEARCH,\n    typechoose: typechoose\n  };\n};\n\nexport var chooseTypeSearch = function chooseTypeSearch(type) {\n  return function (dispatch) {\n    dispatch(chooseTypeSearchUnsafe(type));\n  };\n};\n\nvar addToCartUnsafe = function addToCartUnsafe(productId) {\n  return {\n    type: types.ADD_TO_CART,\n    productId: productId\n  };\n};\n\nexport var addToCart = function addToCart(productId) {\n  return function (dispatch) {\n    dispatch(addToCartUnsafe(productId));\n  };\n};\n\nvar deleteToCartUnsafe = function deleteToCartUnsafe(productId) {\n  return {\n    type: types.DELETE_TO_CART,\n    productId: productId\n  };\n};\n\nexport var deleteToCart = function deleteToCart(productId) {\n  return function (dispatch) {\n    dispatch(deleteToCartUnsafe(productId));\n  };\n};\nexport var checkout = function checkout(products) {\n  return function (dispatch) {\n    dispatch({\n      type: types.CHECKOUT_REQUEST\n    });\n  };\n};\n\nvar ProductsContainer = function ProductsContainer(_ref) {\n  var products = _ref.products;\n  return console.log(\"products\");\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    //ff:getGeolocation(),\n    products: getVisibleProducts(state.products),\n    // type: getType(state),\n    loc: getLocation(state)\n  };\n};\n\nexport default connect(mapStateToProps)(ProductsContainer);","map":{"version":3,"sources":["C:\\proyectos\\cuponatic\\shopping-cart\\src\\actions\\index.js"],"names":["types","getVisibleProducts","getType","getLocation","ProductItem","connect","receiveProducts","products","type","RECEIVE_PRODUCTS","getAllProducts","dispatch","navigator","geolocation","getCurrentPosition","p","localStorage","setItem","coords","latitude","longitude","console","log","maximumAge","timeout","enableHighAccuracy","lat","lon","fetch","then","response","json","error","chooseTypeSearchUnsafe","typechoose","CHOOSE_TYPE_SEARCH","chooseTypeSearch","addToCartUnsafe","productId","ADD_TO_CART","addToCart","deleteToCartUnsafe","DELETE_TO_CART","deleteToCart","checkout","CHECKOUT_REQUEST","ProductsContainer","mapStateToProps","state","loc"],"mappings":"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","sourcesContent":["import * as types from '../constants/ActionTypes'\r\nimport { getVisibleProducts, getType, getLocation } from '../reducers/products'\r\nimport ProductItem from '../components/ProductItem'\r\nimport { connect } from 'react-redux'\r\n\r\nconst receiveProducts = products => ({\r\n  type: types.RECEIVE_PRODUCTS,\r\n  products\r\n})\r\n\r\n\r\n\r\nexport const  getAllProducts =  () => ( dispatch ) => {  \r\n \r\n    navigator.geolocation.getCurrentPosition(function (p) {\r\n      localStorage.setItem(\"latitude\", p.coords.latitude);\r\n      localStorage.setItem(\"longitude\", p.coords.longitude)\r\n    }, function () {console.log(\"no lo hace\")}, {maximumAge:60000, timeout:5000, enableHighAccuracy:true});\r\n\r\n    var lat = localStorage.latitude;\r\n    var lon = localStorage.longitude;\r\n  \r\n\r\n\r\n    fetch(\"https://ww4.cuponatic.com/get?c=Santiago&latitud=\"+lat+\"&longitud=\"+lon+\"0&\")\r\n     .then(\r\n        response => response.json(),\r\n        error => console.log('An error occurred.', error)\r\n      )\r\n     .then(json =>\r\n          dispatch(receiveProducts(json))\r\n     )\r\n}\r\n\r\nconst chooseTypeSearchUnsafe = typechoose => ({\r\n  type: types.CHOOSE_TYPE_SEARCH,\r\n  typechoose\r\n})\r\n\r\nexport const chooseTypeSearch = type => (dispatch) => {\r\n    dispatch(chooseTypeSearchUnsafe(type))\r\n}\r\n\r\nconst addToCartUnsafe = productId => ({\r\n  type: types.ADD_TO_CART,\r\n  productId\r\n})\r\n\r\nexport const addToCart = productId => (dispatch) => {\r\n    dispatch(addToCartUnsafe(productId));\r\n}\r\n\r\nconst deleteToCartUnsafe = productId => ({\r\n  type: types.DELETE_TO_CART,\r\n  productId\r\n})\r\n\r\nexport const deleteToCart = productId => (dispatch) => {\r\n  dispatch(deleteToCartUnsafe(productId))\r\n}\r\n\r\nexport const checkout = products => (dispatch) => {\r\n  dispatch({\r\n    type: types.CHECKOUT_REQUEST\r\n  })\r\n \r\n}\r\n\r\n\r\n\r\nconst ProductsContainer = ({products} ) => (\r\n  \r\n  console.log(\"products\")\r\n \r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n  //ff:getGeolocation(),\r\n  products: getVisibleProducts(state.products),  \r\n // type: getType(state),\r\n  loc:getLocation(state)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,  \r\n \r\n)(ProductsContainer)\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}