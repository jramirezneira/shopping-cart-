{"ast":null,"code":"import _objectSpread from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCTS, ADD_TO_CART, CHOOSE_TYPE_SEARCH } from '../constants/ActionTypes';\n/*\r\n\r\nconst products = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n       // inventory: state.inventory - 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n*/\n\nvar byTypes = function byTypes() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHOOSE_TYPE_SEARCH:\n      return _objectSpread({}, state, {\n        type: action.typechoose\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar byId = function byId() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return _objectSpread({}, state, action.products.reduce(function (obj, product) {\n        obj[product.id_descuento] = product;\n        return obj;\n      }, {}));\n\n    default:\n      return state;\n  }\n};\n/*\r\nconst visibleIds = (state = [], action) => {\r\n\r\n  switch (action.type) {\r\n    case RECEIVE_PRODUCTS:\r\n      return action.products.map(product => product.id_descuento)\r\n    default:\r\n      return state\r\n  }\r\n}*/\n\n\nexport default combineReducers({\n  byId: byId,\n  visibleIds: visibleIds,\n  byTypes: byTypes\n});\nexport var getProduct = function getProduct(state, id) {\n  return state.byId[id];\n};\nexport var getType = function getType(state) {\n  return state.products.byTypes.type !== undefined ? state.products.byTypes.type : null;\n};\nexport var getVisibleProducts = function getVisibleProducts(state) {\n  return state.visibleIds.map(function (id) {\n    return getProduct(state, id);\n  });\n};","map":{"version":3,"sources":["C:\\proyectos\\cuponatic\\shopping-cart\\src\\reducers\\products.js"],"names":["combineReducers","RECEIVE_PRODUCTS","ADD_TO_CART","CHOOSE_TYPE_SEARCH","byTypes","state","action","type","typechoose","byId","products","reduce","obj","product","id_descuento","visibleIds","getProduct","id","getType","undefined","getVisibleProducts","map"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,kBAAxC,QAAkE,0BAAlE;AAGA;;;;;;;;;;;;;;;;AAeA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,kBAAL;AACA,+BACOE,KADP;AAEKE,QAAAA,IAAI,EAACD,MAAM,CAACE;AAFjB;;AAIA;AACI,aAAOH,KAAP;AAPR;AASH,CAVD;;AAaA,IAAMI,IAAI,GAAG,SAAPA,IAAO,GAAwB;AAAA,MAAvBJ,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,gBAAL;AACE,+BACKI,KADL,EAEKC,MAAM,CAACI,QAAP,CAAgBC,MAAhB,CAAuB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC1CD,QAAAA,GAAG,CAACC,OAAO,CAACC,YAAT,CAAH,GAA4BD,OAA5B;AACA,eAAOD,GAAP;AACD,OAHE,EAGA,EAHA,CAFL;;AAOF;AACE,aAAOP,KAAP;AAVJ;AAYD,CAbD;AAeA;;;;;;;;;;;;AAWA,eAAeL,eAAe,CAAC;AAC7BS,EAAAA,IAAI,EAAJA,IAD6B;AAE7BM,EAAAA,UAAU,EAAVA,UAF6B;AAG7BX,EAAAA,OAAO,EAAPA;AAH6B,CAAD,CAA9B;AAMA,OAAO,IAAMY,UAAU,GAAG,SAAbA,UAAa,CAACX,KAAD,EAAQY,EAAR;AAAA,SACxBZ,KAAK,CAACI,IAAN,CAAWQ,EAAX,CADwB;AAAA,CAAnB;AAGP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACb,KAAD;AAAA,SAAWA,KAAK,CAACK,QAAN,CAAeN,OAAf,CAAuBG,IAAvB,KAAgCY,SAAhC,GAA4Cd,KAAK,CAACK,QAAN,CAAeN,OAAf,CAAuBG,IAAnE,GAAwE,IAAnF;AAAA,CAAhB;AAEP,OAAO,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAf,KAAK;AAAA,SACrCA,KAAK,CAACU,UAAN,CAAiBM,GAAjB,CAAqB,UAAAJ,EAAE;AAAA,WAAID,UAAU,CAACX,KAAD,EAAQY,EAAR,CAAd;AAAA,GAAvB,CADqC;AAAA,CAAhC","sourcesContent":["import { combineReducers } from 'redux'\r\nimport { RECEIVE_PRODUCTS, ADD_TO_CART, CHOOSE_TYPE_SEARCH } from '../constants/ActionTypes'\r\n\r\n\r\n/*\r\n\r\nconst products = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n       // inventory: state.inventory - 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n*/\r\nconst byTypes = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CHOOSE_TYPE_SEARCH:\r\n        return {\r\n            ...state,\r\n             type:action.typechoose\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst byId = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        ...action.products.reduce((obj, product) => {\r\n          obj[product.id_descuento] = product\r\n          return obj\r\n        }, {})\r\n      }\r\n    default:      \r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\nconst visibleIds = (state = [], action) => {\r\n\r\n  switch (action.type) {\r\n    case RECEIVE_PRODUCTS:\r\n      return action.products.map(product => product.id_descuento)\r\n    default:\r\n      return state\r\n  }\r\n}*/\r\n\r\nexport default combineReducers({\r\n  byId,\r\n  visibleIds,\r\n  byTypes\r\n})\r\n\r\nexport const getProduct = (state, id) =>\r\n  state.byId[id]\r\n\r\nexport const getType = (state) => state.products.byTypes.type !== undefined ? state.products.byTypes.type:null\r\n\r\nexport const getVisibleProducts = state =>\r\n  state.visibleIds.map(id => getProduct(state, id))\r\n"]},"metadata":{},"sourceType":"module"}