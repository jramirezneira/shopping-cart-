{"ast":null,"code":"import _objectSpread from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { combineReducers } from 'redux';\nimport cart, * as fromCart from './cart';\nimport products, * as fromProducts from './products';\nimport { getProduct } from './products';\nimport { getLocalStorageCart } from '../localStore';\nexport default combineReducers({\n  cart: cart,\n  products: products\n});\n\nvar getAddedIds = function getAddedIds(state) {\n  return fromCart.getAddedIds(state.cart);\n};\n\nvar getQuantity = function getQuantity(state, id) {\n  return fromCart.getQuantity(state.cart, id);\n}; //const getProduct = (state, id) => fromProducts.getProduct(state.products, id)\n//export const getType = (state) => fromProducts.getType(state)\n\n\nexport var getTotal = function getTotal(state) {\n  return (//getAddedIds(state)\n    Object.entries(getLocalStorageCart()).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          id = _ref2[0],\n          cantidad = _ref2[1];\n\n      return (//parseInt(total + getProduct(state, id).valor_oferta.replace(\"$\",\"\").replace(\".\",\"\") * getQuantity(state, id)) ,\n        //...getProduct(state, \"253457\").id_descuento\n        getProduct(state.products, 253457).id_descuento\n      );\n    } //.toFixed(2)\n    )\n  );\n};\nexport var getCartProducts = function getCartProducts(state) {\n  return Object.entries(getLocalStorageCart()).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        id = _ref4[0],\n        cantidad = _ref4[1];\n\n    return _objectSpread({}, getProduct(state, id), {\n      quantity: cantidad //getQuantity(state, id)\n\n    });\n  });\n};","map":{"version":3,"sources":["C:\\proyectos\\cuponatic\\shopping-cart\\src\\reducers\\index.js"],"names":["combineReducers","cart","fromCart","products","fromProducts","getProduct","getLocalStorageCart","getAddedIds","state","getQuantity","id","getTotal","Object","entries","map","cantidad","id_descuento","getCartProducts","quantity"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,EAAa,KAAKC,QAAlB,MAAgC,QAAhC;AACA,OAAOC,QAAP,EAAiB,KAAKC,YAAtB,MAAwC,YAAxC;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,mBAAT,QAAoC,eAApC;AAEA,eAAeN,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAJA,IAD6B;AAE7BE,EAAAA,QAAQ,EAARA;AAF6B,CAAD,CAA9B;;AAKA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAIN,QAAQ,CAACK,WAAT,CAAqBC,KAAK,CAACP,IAA3B,CAAJ;AAAA,CAAzB;;AACA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACD,KAAD,EAAQE,EAAR;AAAA,SAAeR,QAAQ,CAACO,WAAT,CAAqBD,KAAK,CAACP,IAA3B,EAAiCS,EAAjC,CAAf;AAAA,CAApB,C,CACA;AACA;;;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAH,KAAK;AAAA,SAC3B;AACAI,IAAAA,MAAM,CAACC,OAAP,CAAeP,mBAAmB,EAAlC,EAAsCQ,GAAtC,CAA0C;AAAA;AAAA,UAAEJ,EAAF;AAAA,UAAMK,QAAN;;AAAA,aACtC;AACD;AACAV,QAAAA,UAAU,CAACG,KAAK,CAACL,QAAP,EAAkB,MAAlB,CAAV,CAAoCa;AAHG;AAAA,KAA1C,CAKE;AALF;AAF2B;AAAA,CAAtB;AAWP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAT,KAAK;AAAA,SAClCI,MAAM,CAACC,OAAP,CAAeP,mBAAmB,EAAlC,EAAsCQ,GAAtC,CAA0C;AAAA;AAAA,QAAEJ,EAAF;AAAA,QAAMK,QAAN;;AAAA,6BAErCV,UAAU,CAACG,KAAD,EAAQE,EAAR,CAF2B;AAGxCQ,MAAAA,QAAQ,EAAEH,QAH8B,CAGtB;;AAHsB;AAAA,GAA1C,CADkC;AAAA,CAA7B","sourcesContent":["import { combineReducers } from 'redux'\r\nimport cart, * as fromCart from './cart'\r\nimport products, * as fromProducts from './products'\r\nimport { getProduct } from './products'\r\nimport { getLocalStorageCart } from '../localStore'\r\n\r\nexport default combineReducers({\r\n  cart,\r\n  products\r\n})\r\n\r\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\r\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\r\n//const getProduct = (state, id) => fromProducts.getProduct(state.products, id)\r\n//export const getType = (state) => fromProducts.getType(state)\r\n\r\nexport const getTotal = state =>\r\n  //getAddedIds(state)\r\n  Object.entries(getLocalStorageCart()).map(([id, cantidad]) =>\r\n      //parseInt(total + getProduct(state, id).valor_oferta.replace(\"$\",\"\").replace(\".\",\"\") * getQuantity(state, id)) ,\r\n     //...getProduct(state, \"253457\").id_descuento\r\n     getProduct(state.products,  253457).id_descuento\r\n    \r\n    //.toFixed(2)\r\n  )\r\n\r\n\r\nexport const getCartProducts = state =>(\r\n  Object.entries(getLocalStorageCart()).map(([id, cantidad]) => ({\r\n      \r\n    ...getProduct(state, id),\r\n    quantity: cantidad//getQuantity(state, id)\r\n  })));\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}