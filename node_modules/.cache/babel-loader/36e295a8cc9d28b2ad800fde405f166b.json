{"ast":null,"code":"import _defineProperty from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { ADD_TO_CART, CHECKOUT_REQUEST, CHECKOUT_FAILURE, DELETE_TO_CART } from '../constants/ActionTypes';\nimport { addToLocalStorageCart, removeItemLocalStorageCart } from '../localStore';\nvar initialState = {\n  addedIds: [],\n  quantityById: {},\n  deleteById: {}\n};\n\nvar addedIds = function addedIds() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.addedIds;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // const dr= state.filter(( id }) => id != action.productId);\n  switch (action.type) {\n    case ADD_TO_CART:\n      if (state.indexOf(action.productId) !== -1) {\n        return state;\n      }\n\n      addToLocalStorageCart(action.productId);\n      return _toConsumableArray(state);\n\n    case DELETE_TO_CART:\n      removeItemLocalStorageCart(action.productId);\n      return state;\n    //.filter( id  => id !== action.productId)\n\n    default:\n      return state;\n  }\n};\n\nvar quantityById = function quantityById() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.quantityById;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var productId = action.productId;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      return _objectSpread({}, state);\n\n    case DELETE_TO_CART:\n      return _objectSpread({}, state, _defineProperty({}, productId, 0));\n\n    default:\n      return state;\n  }\n};\n\nexport var getQuantity = function getQuantity(state, productId) {\n  return state.quantityById[productId] || 0;\n};\nexport var getAddedIds = function getAddedIds(state) {\n  return state.addedIds;\n};\n\nvar cart = function cart() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHECKOUT_REQUEST:\n      return initialState;\n\n    case CHECKOUT_FAILURE:\n      return action.cart;\n\n    default:\n      return {\n        addedIds: addedIds(state.addedIds, action),\n        quantityById: quantityById(state.quantityById, action)\n      };\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["C:\\proyectos\\cuponatic\\shopping-cart\\src\\reducers\\cart.js"],"names":["ADD_TO_CART","CHECKOUT_REQUEST","CHECKOUT_FAILURE","DELETE_TO_CART","addToLocalStorageCart","removeItemLocalStorageCart","initialState","addedIds","quantityById","deleteById","state","action","type","indexOf","productId","getQuantity","getAddedIds","cart"],"mappings":";;;AAAA,SACEA,WADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,cAJF,QAKO,0BALP;AAMA,SAASC,qBAAT,EAAgCC,0BAAhC,QAAkE,eAAlE;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,YAAY,EAAE,EAFK;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;;AAMA,IAAMF,QAAQ,GAAG,SAAXA,QAAW,GAA2C;AAAA,MAA1CG,KAA0C,uEAAlCJ,YAAY,CAACC,QAAqB;AAAA,MAAXI,MAAW;;AACzD;AAED,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,WAAL;AACE,UAAIU,KAAK,CAACG,OAAN,CAAcF,MAAM,CAACG,SAArB,MAAoC,CAAC,CAAzC,EAA4C;AAC1C,eAAOJ,KAAP;AACD;;AACDN,MAAAA,qBAAqB,CAACO,MAAM,CAACG,SAAR,CAArB;AACA,gCAAYJ,KAAZ;;AACF,SAAKP,cAAL;AACEE,MAAAA,0BAA0B,CAACM,MAAM,CAACG,SAAR,CAA1B;AACA,aAAOJ,KAAP;AAAY;;AACd;AACE,aAAOA,KAAP;AAXJ;AAaD,CAhBD;;AAkBA,IAAMF,YAAY,GAAG,SAAfA,YAAe,GAA+C;AAAA,MAA9CE,KAA8C,uEAAtCJ,YAAY,CAACE,YAAyB;AAAA,MAAXG,MAAW;AAAA,MAEvDG,SAFuD,GAEzCH,MAFyC,CAEvDG,SAFuD;;AAGlE,UAAQH,MAAM,CAACC,IAAf;AACE,SAAKZ,WAAL;AAEE,+BAAYU,KAAZ;;AAGF,SAAKP,cAAL;AAEE,+BAAYO,KAAZ,sBACOI,SADP,EACmB,CADnB;;AAGF;AACE,aAAOJ,KAAP;AAZJ;AAcD,CAjBD;;AAoBA,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACL,KAAD,EAAQI,SAAR;AAAA,SAAuBJ,KAAK,CAACF,YAAN,CAAmBM,SAAnB,KAAiC,CAAxD;AAAA,CAApB;AAEP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAN,KAAK;AAAA,SAAIA,KAAK,CAACH,QAAV;AAAA,CAAzB;;AAEP,IAAMU,IAAI,GAAG,SAAPA,IAAO,GAAkC;AAAA,MAAjCP,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAE7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,gBAAL;AACE,aAAOK,YAAP;;AACF,SAAKJ,gBAAL;AACE,aAAOS,MAAM,CAACM,IAAd;;AACF;AACE,aAAO;AACLV,QAAAA,QAAQ,EAAEA,QAAQ,CAACG,KAAK,CAACH,QAAP,EAAiBI,MAAjB,CADb;AAELH,QAAAA,YAAY,EAAEA,YAAY,CAACE,KAAK,CAACF,YAAP,EAAqBG,MAArB;AAFrB,OAAP;AANJ;AAWD,CAbD;;AAeA,eAAeM,IAAf","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  CHECKOUT_REQUEST,\r\n  CHECKOUT_FAILURE,\r\n  DELETE_TO_CART\r\n} from '../constants/ActionTypes'\r\nimport { addToLocalStorageCart, removeItemLocalStorageCart } from '../localStore'\r\n\r\nconst initialState = {\r\n  addedIds: [],\r\n  quantityById: {},\r\n  deleteById: {}\r\n}\r\n\r\nconst addedIds = (state = initialState.addedIds, action) => {\r\n   // const dr= state.filter(( id }) => id != action.productId);\r\n   \r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      if (state.indexOf(action.productId) !== -1) {\r\n        return state\r\n      }\r\n      addToLocalStorageCart(action.productId);\r\n      return [ ...state/*, action.productId*/ ]\r\n    case DELETE_TO_CART:\r\n      removeItemLocalStorageCart(action.productId);\r\n      return state//.filter( id  => id !== action.productId)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst quantityById = (state = initialState.quantityById, action) => {\r\n\r\n     const { productId } = action\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n\r\n      return { ...state,\r\n        //[productId]: (state[productId] || 0) + 1\r\n      }\r\n    case DELETE_TO_CART:\r\n     \r\n      return { ...state,\r\n            [productId]: 0\r\n         }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const getQuantity = (state, productId) =>  state.quantityById[productId] || 0\r\n\r\nexport const getAddedIds = state => state.addedIds\r\n\r\nconst cart = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case CHECKOUT_REQUEST:\r\n      return initialState\r\n    case CHECKOUT_FAILURE:\r\n      return action.cart\r\n    default:\r\n      return {\r\n        addedIds: addedIds(state.addedIds, action),\r\n        quantityById: quantityById(state.quantityById, action)\r\n      }\r\n  }\r\n}\r\n\r\nexport default cart\r\n"]},"metadata":{},"sourceType":"module"}