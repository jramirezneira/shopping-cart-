{"ast":null,"code":"import _slicedToArray from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nexport var addToLocalStorageCart = function addToLocalStorageCart(value) {\n  var existing = localStorage.getItem(\"cart3\"); // If no existing data, create an array\n  // Otherwise, convert the localStorage string to an array\n\n  existing = existing ? JSON.parse(existing) : {}; //console.log(existing);\n\n  var key = 300; // Add new data to localStorage Array\n\n  existing[value] = (existing[value] || 0) + 1; // Save back to localStorage\n\n  localStorage.setItem(\"cart3\", JSON.stringify(existing));\n  console.log(getLocalStorageCart());\n};\nexport var getLocalStorageCart = function getLocalStorageCart() {\n  var existing = localStorage.getItem(\"cart3\"); // If no existing data, create an array\n  // Otherwise, convert the localStorage string to an array\n\n  existing = existing ? JSON.parse(existing) : {};\n  Object.entries(existing).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        va = _ref2[1];\n\n    console.log(make);\n    console.log(type);\n  });\n};","map":{"version":3,"sources":["C:\\proyectos\\cuponatic\\shopping-cart\\src\\localStore\\index.js"],"names":["addToLocalStorageCart","value","existing","localStorage","getItem","JSON","parse","key","setItem","stringify","console","log","getLocalStorageCart","Object","entries","map","va","make","type"],"mappings":";AAAA,OAAO,IAAMA,qBAAqB,GAAI,SAAzBA,qBAAyB,CAACC,KAAD,EAAW;AAEhD,MAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf,CAFgD,CAIhD;AACA;;AACAF,EAAAA,QAAQ,GAAGA,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAH,GAA0B,EAA7C,CANgD,CAOhD;;AAEA,MAAIK,GAAG,GAAC,GAAR,CATgD,CAUhD;;AACAL,EAAAA,QAAQ,CAACD,KAAD,CAAR,GAAkB,CAACC,QAAQ,CAACD,KAAD,CAAR,IAAmB,CAApB,IAAyB,CAA3C,CAXgD,CAahD;;AACAE,EAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,SAAL,CAAeP,QAAf,CAA9B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYC,mBAAmB,EAA/B;AAGA,CAlBM;AAoBP,OAAO,IAAMA,mBAAmB,GAAI,SAAvBA,mBAAuB,GAAM;AAEzC,MAAIV,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf,CAFyC,CAIzC;AACA;;AACAF,EAAAA,QAAQ,GAAGA,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAH,GAA0B,EAA7C;AAGAW,EAAAA,MAAM,CAACC,OAAP,CAAeZ,QAAf,EAAyBa,GAAzB,CAA6B,gBAAe;AAAA;AAAA,QAAbR,GAAa;AAAA,QAARS,EAAQ;;AACrCN,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AAEH,GAJJ;AAMA,CAfM","sourcesContent":["export const addToLocalStorageCart =  (value) => {\r\n\r\n\tvar existing = localStorage.getItem(\"cart3\");\r\n\r\n\t// If no existing data, create an array\r\n\t// Otherwise, convert the localStorage string to an array\r\n\texisting = existing ? JSON.parse(existing) : {};\r\n\t//console.log(existing);\r\n\r\n\tlet key=300;\r\n\t// Add new data to localStorage Array\r\n\texisting[value] = (existing[value] || 0) + 1;\r\n\r\n\t// Save back to localStorage\r\n\tlocalStorage.setItem(\"cart3\", JSON.stringify(existing));\r\n\tconsole.log(getLocalStorageCart());\r\n\t\r\n\r\n};\r\n\r\nexport const getLocalStorageCart =  () => {\r\n\r\n\tvar existing = localStorage.getItem(\"cart3\");\r\n\r\n\t// If no existing data, create an array\r\n\t// Otherwise, convert the localStorage string to an array\r\n\texisting = existing ? JSON.parse(existing) : {};\r\n\t\r\n\r\n\tObject.entries(existing).map(([key, va]) => {\r\n        console.log(make)\r\n        console.log(type)\r\n      \r\n    })\r\n\r\n};"]},"metadata":{},"sourceType":"module"}