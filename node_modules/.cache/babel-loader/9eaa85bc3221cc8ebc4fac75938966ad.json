{"ast":null,"code":"import _objectSpread from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\proyectos\\\\cuponatic\\\\shopping-cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { combineReducers } from 'redux';\nimport cart, * as fromCart from './cart';\nimport products, * as fromProducts from './products';\nimport { getLocalStorageCart } from '../localStore';\nexport default combineReducers({\n  cart: cart,\n  products: products\n});\n\nvar getAddedIds = function getAddedIds(state) {\n  return fromCart.getAddedIds(state.cart);\n};\n\nvar getQuantity = function getQuantity(state, id) {\n  return fromCart.getQuantity(state.cart, id);\n};\n\nvar getProduct = function getProduct(state, id) {\n  return fromProducts.getProduct(state.products, id);\n}; //export const getType = (state) => fromProducts.getType(state)\n\n/*export const getTotal = state => \r\n  getAddedIds(state).reduce((total, id) =>\r\n //  [141276, 259855].reduce((total, id) =>\r\n      parseInt(total + getProduct(state, id).valor_oferta.replace(\"$\",\"\").replace(\".\",\"\") * getQuantity(state, id)) ,\r\n      0\r\n    )\r\n    .toFixed(2)*/\n\n\nexport var getTotal = function getTotal(state) {\n  var products = getCartProducts(state);\n  var total = 0; //console.log(products[0].valor_oferta);\n\n  getCartProducts(state).reduce(function (total, product) {\n    return (// console.log(product.valor_oferta),\n      //total=total + products[0].valor_oferta\n      parseInt(total + product.valor_oferta.replace(\"$\", \"\").replace(\".\", \"\") * 5)\n    );\n  }, 0); //return products[0].valor_oferta\n};\nexport var getCartProducts = function getCartProducts(state) {\n  return Object.entries(getLocalStorageCart()).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        cantidad = _ref2[1];\n\n    return _objectSpread({}, getProduct(state, id), {\n      quantity: cantidad //getQuantity(state, id)\n\n    });\n  });\n};","map":{"version":3,"sources":["C:\\proyectos\\cuponatic\\shopping-cart\\src\\reducers\\index.js"],"names":["combineReducers","cart","fromCart","products","fromProducts","getLocalStorageCart","getAddedIds","state","getQuantity","id","getProduct","getTotal","getCartProducts","total","reduce","product","parseInt","valor_oferta","replace","Object","entries","map","cantidad","quantity"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,EAAa,KAAKC,QAAlB,MAAgC,QAAhC;AACA,OAAOC,QAAP,EAAiB,KAAKC,YAAtB,MAAwC,YAAxC;AACA,SAASC,mBAAT,QAAoC,eAApC;AAEA,eAAeL,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAJA,IAD6B;AAE7BE,EAAAA,QAAQ,EAARA;AAF6B,CAAD,CAA9B;;AAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAIL,QAAQ,CAACI,WAAT,CAAqBC,KAAK,CAACN,IAA3B,CAAJ;AAAA,CAAzB;;AACA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACD,KAAD,EAAQE,EAAR;AAAA,SAAeP,QAAQ,CAACM,WAAT,CAAqBD,KAAK,CAACN,IAA3B,EAAiCQ,EAAjC,CAAf;AAAA,CAApB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACH,KAAD,EAAQE,EAAR;AAAA,SAAeL,YAAY,CAACM,UAAb,CAAwBH,KAAK,CAACJ,QAA9B,EAAwCM,EAAxC,CAAf;AAAA,CAAnB,C,CACA;;AAEA;;;;;;;;;AASE,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAJ,KAAK,EAC7B;AACE,MAAIJ,QAAQ,GAAGS,eAAe,CAACL,KAAD,CAA9B;AACA,MAAIM,KAAK,GAAC,CAAV,CAFF,CAGE;;AACAD,EAAAA,eAAe,CAACL,KAAD,CAAf,CAAuBO,MAAvB,CAA+B,UAACD,KAAD,EAAQE,OAAR;AAAA,WAEhC;AACC;AACGC,MAAAA,QAAQ,CAACH,KAAK,GAAGE,OAAO,CAACE,YAAR,CAAqBC,OAArB,CAA6B,GAA7B,EAAiC,EAAjC,EAAqCA,OAArC,CAA6C,GAA7C,EAAiD,EAAjD,IAAuD,CAAhE;AAJoB;AAAA,GAA/B,EAI8E,CAJ9E,EAJF,CAYA;AAED,CAfQ;AAqBT,OAAO,IAAMN,eAAe,GAAG,SAAlBA,eAAkB,CAAAL,KAAK;AAAA,SAClCY,MAAM,CAACC,OAAP,CAAef,mBAAmB,EAAlC,EAAsCgB,GAAtC,CAA0C;AAAA;AAAA,QAAEZ,EAAF;AAAA,QAAMa,QAAN;;AAAA,6BAErCZ,UAAU,CAACH,KAAD,EAAQE,EAAR,CAF2B;AAGxCc,MAAAA,QAAQ,EAAED,QAH8B,CAGtB;;AAHsB;AAAA,GAA1C,CADkC;AAAA,CAA7B","sourcesContent":["import { combineReducers } from 'redux'\r\nimport cart, * as fromCart from './cart'\r\nimport products, * as fromProducts from './products'\r\nimport { getLocalStorageCart } from '../localStore'\r\n\r\nexport default combineReducers({\r\n  cart,\r\n  products\r\n})\r\n\r\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\r\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\r\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\r\n//export const getType = (state) => fromProducts.getType(state)\r\n\r\n/*export const getTotal = state => \r\n  getAddedIds(state).reduce((total, id) =>\r\n //  [141276, 259855].reduce((total, id) =>\r\n      parseInt(total + getProduct(state, id).valor_oferta.replace(\"$\",\"\").replace(\".\",\"\") * getQuantity(state, id)) ,\r\n      0\r\n    )\r\n    .toFixed(2)*/\r\n\r\n\r\n  export const getTotal = state => \r\n  {\r\n    let products = getCartProducts(state);\r\n    let total=0;\r\n    //console.log(products[0].valor_oferta);\r\n    getCartProducts(state).reduce ((total, product) => \r\n      \r\n   // console.log(product.valor_oferta),\r\n    //total=total + products[0].valor_oferta\r\n       parseInt(total + product.valor_oferta.replace(\"$\",\"\").replace(\".\",\"\") * 5),0\r\n    \r\n    )\r\n\r\n  //return products[0].valor_oferta\r\n\r\n}\r\n   \r\n  \r\n\r\n\r\n\r\nexport const getCartProducts = state =>(\r\n  Object.entries(getLocalStorageCart()).map(([id, cantidad]) => ({\r\n      \r\n    ...getProduct(state, id),\r\n    quantity: cantidad//getQuantity(state, id)\r\n  })));\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}